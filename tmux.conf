# set prefix to ctrl-space
unbind C-b
set -g prefix "C- "
bind "C- " last-window

# backup prefix (ctrl-space sometimes gets captured)
set -g prefix2 "C-a"
bind "C-a" last-window

# address vim mode switching delay (http://superuser.com/a/252717)
set -s escape-time 0

set -g history-limit 50000

# enter copy mode with <ctrl-space><space>
bind Space copy-mode

set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on
set -g base-index 1 # number windows beginning at 1

# setup tmux sessions like normal shells (make sure iTerm2 is set to xterm-256color)
set -g default-terminal "screen-256color"

# use reattach-to-user-namespace if present to give tmux access to the system
# pasteboard (see: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard)
#set -g default-command "reattach-to-user-namespace -l zsh 2>/dev/null || zsh"

# <shift>+r to reload config file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# pass environment variables through
set -ga update-environment " COLORFGBG"


## Status Line ##

# set background and foreground colors based on COLORFGBG environment variable.
# If COLORFGBG ends in 0-6 or 8, use a dark theme, otherwise light.
if 'echo "$COLORFGBG" | grep -qE ";[0-6,8]$"' \
    "set -g status-bg black; set -g status-fg white" \
    "set -g status-bg white; set -g status-fg brightyellow"

set -g status-left ' #[fg=blue]#S#[default] '
set -g status-right '#[fg=red]#h #[fg=green]#(date "+%H:%M") \
#[fg=yellow]#(date "+%b%d") '
set -g status-left-length 60
set -g status-right-length 60

# watch background windows for activity and highlight status bar
setw -g monitor-activity on
set -g visual-activity on
setw -g window-status-activity-fg black
setw -g window-status-activity-bg brightred

set-window-option -g window-status-current-attr 'reverse'

# enable mouse support
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

## Vi Bindings ##

# tmux will automatically use vi key bindings in most places because $EDITOR is
# set to 'vim'.  However, we still map a few other keys for things like pane
# navigation and resizing

# use "v" and "s" to do vertical/horizontal splits
unbind %
bind s split-window -v
bind v split-window -h

# use vim style copy/paste keys
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# use the vim motion keys to move between panes
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# use the vim resize keys. the number at the end is how much the pane will be
# resized
bind < resize-pane -L 3
bind > resize-pane -R 3
bind - resize-pane -D 3
bind + resize-pane -U 3

# maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.0 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.0 \; kill-window -t tmp
