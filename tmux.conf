# set prefix to [ctrl] + [space]
unbind-key C-b
set-option -g prefix "C- "
bind-key "C- " last-window

# backup prefix for chromebook, since it captures ctrl-space
set-option -g prefix2 "C-a"
bind-key "C-a" last-window

set-option -g history-limit 10000

# enter copy mode with <c-space><space>
bind Space copy-mode

set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on
set-option -g base-index 1

# setup tmux sessions like normal shells (make sure iTerm2 is set to xterm-256color)
set-option -g default-terminal "screen-256color"

# use reattach-to-user-namespace if present to give tmux access to the system
# pasteboard (see: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard)
#set-option -g default-command "reattach-to-user-namespace -l zsh 2>/dev/null || zsh"

# <shift>+r to relad config file
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."

set-option -ga update-environment " COLORFGBG"


## Status Line ##

set-option -g status-bg black
set-option -g status-fg white
if-shell "[[ '$COLORFGBG' == '11;15' ]]" "set-option -g status-bg white" ""
if-shell "[[ '$COLORFGBG' == '11;15' ]]" "set-option -g status-fg black" ""

set-option -g status-left ' #[fg=blue]#S#[default] '
set-option -g status-right '#[fg=red]#H #[fg=green]#(date "+%H:%M") \
#[fg=yellow]#(date "+%b%d") '
set-option -g status-left-length 60
set-option -g status-right-length 60

# watch background windows for activity and highlight status bar
setw -g monitor-activity on
set -g visual-activity on
setw -g window-status-activity-fg black
setw -g window-status-activity-bg brightred

set-window-option -g window-status-current-attr 'reverse'

# enable mouse support
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

## Vi Bindings ##

# tmux will automatically use vi key bindings in most places because $EDITOR is
# set to 'vim'.  However, we still map a few other keys for things like pane
# navigation and resizing

# use "v" and "s" to do vertical/horizontal splits
unbind-key %
bind-key s split-window -v
bind-key v split-window -h

# use vim style copy/paste keys
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# use the vim motion keys to move between panes
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

# use the vim resize keys. the number at the end is how much the pane will be
# resized
bind-key < resize-pane -L 3
bind-key > resize-pane -R 3
bind-key - resize-pane -D 3
bind-key + resize-pane -U 3

# maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.0 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.0 \; kill-window -t tmp
