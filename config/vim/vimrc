" Load defaults.vim
unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

" General
set history=9999 " keep plenty of history
set hidden " allow changing buffers without saving
set wildmode=list:longest,full
set encoding=utf-8

" Set XDG directories if not already set
if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif

set viewdir=$XDG_DATA_HOME/vim/view     | call mkdir(&viewdir, 'p')
set backupdir=$XDG_DATA_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_DATA_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_DATA_HOME/vim/undo     | call mkdir(&undodir, 'p')
set viminfofile=$XDG_DATA_HOME/vim/viminfo
set undofile

" UI
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
set number " show line numbers
set splitright "open vertical splits on the right
set sidescroll=1
set sidescrolloff=8

" Text Formatting / Layout
set ignorecase smartcase infercase " smart case matching
set tabstop=2 shiftwidth=2 expandtab  " 2 space indents
if v:version >= 704
  set formatoptions+=cqj
endif
set diffopt=filler,vertical

" Mappings
let mapleader = " "
let maplocalleader = " "

noremap j gj
noremap k gk

" Join lines and restore cursor location (J)
nnoremap J :call Preserve("join")<CR>

" Buffer navigation
nnoremap <leader>; <C-^>
:map <S-L> :bnext<CR>
:map <S-H> :bprev<CR>
nnoremap <leader>bd :bd<CR>

" strip trailing whitespace
nnoremap _$ :call Preserve("%s/\\s\\+$//e")<CR>

inoremap jk <esc>

nnoremap <silent> <leader>! :redraw!<CR>:redrawstatus!<CR>
nnoremap <leader>R :so $MYVIMRC<CR>

nnoremap <leader>e :Lexplore<CR>

" tab navigation
nnoremap <space><tab><tab> :tabnew<CR>
nnoremap <space><tab>d :tabclose<CR>
nnoremap <space><tab>] :tabnext<CR>
nnoremap <space><tab>[ :tabprevious<CR>

" move around split windows with ctrl
noremap <C-H> <C-W>h
noremap <C-J> <C-W>j
noremap <C-K> <C-W>k
noremap <C-L> <C-W>l

function! Preserve(command) "{{{
  " preparation: save last search, and cursor position.
  let _s=@/
  let view = winsaveview()
  " do the business:
  execute a:command
  " clean up: restore previous search history, and cursor position
  let @/=_s
  call winrestview(view)
endfunction "}}}

let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = -28

" Colors
syntax on
colorscheme habamax
set hlsearch
set colorcolumn=+1 " display column at edge of textwidth

highlight Comment ctermfg=8
highlight SpecialComment ctermfg=8
