# vim: ft=zsh

autoload -Uz add-zsh-hook colors vcs_info

colors
if (( ! $+PROMPT_COLOR )); then
  case $HOSTNAME in
    elias) PROMPT_COLOR="${fg[red]}" ;;
    esther) PROMPT_COLOR="${fg[cyan]}" ;;
    judah) PROMPT_COLOR="${fg[magenta]}" ;;
    levi) PROMPT_COLOR="${fg[green]}" ;;
    localhost) PROMPT_COLOR="${fg[blue]}" ;;
    meshach) PROMPT_COLOR="${fg[blue]}" ;;
    penguin) PROMPT_COLOR="${fg[blue]}" ;;
    vashti) PROMPT_COLOR="${fg[blue]}" ;;
  esac
fi

function prompt_willnorris_hook_precmd {
  vcs_info 2>/dev/null
}

function prompt_willnorris {
  (( split = $LINES >= 20 )) # split prompt if sufficient vertical space

  if (( $split )); then
    print ""
  fi
  print -n "%{$PROMPT_COLOR%}"

  if (( !$split )); then
    (( cols = $COLUMNS * 1/4))
  elif [[ -n ${vcs_info_msg_0_} ]]; then
    # if we have any vcs info, make sure there's room in the prompt for it
    # strip color codes to ensure we calculate length correctly
    vcs=$(echo ${vcs_info_msg_0_} | sed "s/%F{[[:alnum:]]*}//g" | sed "s/%f//g")
    (( cols = $COLUMNS - ${#vcs} - 2 ))
  else
    cols="-1"
  fi
  print -n "%${cols}<â€¦<%~%<<"

  if [[ -n ${vcs_info_msg_0_} ]]; then
    print -n " ${vcs_info_msg_0_}"
  fi

  if (( $split )); then
    print ""
  else
    print -n " "
  fi
  print -n "%{$PROMPT_COLOR%}%# %{$reset_color%}"
}

function prompt_willnorris_setup {
  PROMPT='$(prompt_willnorris)'

  add-zsh-hook precmd prompt_willnorris_hook_precmd
  add-zsh-hook precmd precmd_set_xterm_title

  zstyle ':vcs_info:*' enable git hg p4 svn
  zstyle ':vcs_info:git*' formats "%f(%F{yellow}%b%m%u%c%f)"
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*' stagedstr   "%F{green}+%f"
  zstyle ':vcs_info:*' unstagedstr "%F{blue}*%f"
}

prompt_willnorris_setup "$@"
