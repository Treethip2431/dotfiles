#!/bin/bash
#
# Custom bash(1) utility functions
#


# Get shorter name of specified path.
#   - $HOME is replaced with '~'
#   - if path is longer than $MAXPATH characters, 
#     it is trimmed and prepended with '...'
function _shortpath
{
	MAXPATH=${MAXPATH:-30}
	DIR=`pwd | sed "s|^$HOME|~|"`

	if [ ${#DIR} -gt "$MAXPATH" ]; then
		let "MAXPATH -= 3"
		DIR="...${DIR: -$MAXPATH}"
	fi

	echo $DIR
}


# Callback function to set the command prompt PS1
function setPS1
{
	[ -z "${PROMPT}" ] && PROMPT="\x\\$"

	PS1="${PS1COLOR}${PROMPT}\[\033[0m\] "

	if [ `expr "$PS1" : '.*\(\\x\).*'` ]; then
		SHORTPATH=`_shortpath`
		PS1=${PS1/\\x/$SHORTPATH}
	fi

	# add information to titlebar if using xterm
	if [ -z "${PS1_NO_TITLEBAR}" ]; then
		case $TERM in
			xterm*)
				local PS1_TITLEBAR="\[\e]0;\u@\h:\w\a\]"
				;;
			*)
				local PS1_TITLEBAR=''
				;;
		esac
	fi

	export PS1="${PS1_TITLEBAR}${PS1}"
}


# Set the application home.  This sets the *_HOME environment variable, and adds
# the application's bin, sbin, and man directories to the appropriate paths
function setAppHome
{
	[ -n "$1" ] && [ -n "$2" ] && [ -d $2 ] && {
		export `echo $1 | tr a-z A-Z`_HOME="$2"
		addToPath "$2/bin"
		addToPath "$2/sbin"

		addToManPath "$2/man"
		addToManPath "$2/share/man"
	}
}


# Add the specified folder to the PATH environment variable, if it is not already present
function addToPath
{
	[ -d $1 ] && [ ! `echo $PATH | egrep "(^|:)$1(:|$)"` ] && PATH="$1:$PATH"
}

# Add the specified folder to the MANPATH environment variable, if it is not already present
function addToManPath
{
	[ -d $1 ] && [ ! `echo $MANPATH | egrep "(^|:)$1(:|$)"` ] && MANPATH="$1:$MANPATH"
}

# Add the specified folder to the LD_LIBRARY_PATH environment variable, if it is not already present
function addToLibPath
{
	[ -d $1 ] && [ ! `echo $LD_LIBRARY_PATH | egrep "(^|:)$1(:|$)"` ] && LD_LIBRARY_PATH="$1:$LD_LIBRARY_PATH"
}

function appendToAlias
{
	if [ ${#@} -ge 2 ]; then
		args=($@); unset args[0]
		ALIAS_CMD=`alias $1 2>/dev/null || echo "alias $1='$1'"`
		ALIAS_CMD="${ALIAS_CMD%\'} ${args[@]}'"
		eval "$ALIAS_CMD"
	fi
}

function sdr
{
	if [ -z "$@" ]; then
		screen -U -D -R
	else
		screen -U -D -R $@
	fi
}

#function getConnectingHost
#{
#	foo=`tty | sed "s/\/dev\///"` && who | grep -E "\W$foo\W" | sed -r "s/.*\((.*)\)/\1/"
#}
